<?php

use Cissee\Webtrees\Module\PersonalFacts\IndividualFactsTabModule_2x;
use Cissee\WebtreesExt\MoreI18N;
use Fisharebest\Webtrees\Individual;
use Fisharebest\Webtrees\View;
use Vesta\VestaUtils;
use function GuzzleHttp\json_encode;

/**
 * @var bool             $can_edit
 * @var Collection<Fact> $facts
 * @var bool             $has_associate_facts
 * @var bool             $has_historic_facts
 * @var bool             $has_relative_facts
 * @var Individual       $individual
 * 
 * @var IndividualFactsTabModule_2x $module
 */

?>

<?php
 //[RC] PATCHED
$outputBeforeTab = $module->getOutputBeforeTab($individual);
echo $outputBeforeTab->getMain();
View::push('javascript');
echo $outputBeforeTab->getScript();
View::endpush();
?>

<div class="wt-facts-tab py-4">
    <table class="table wt-facts-table">
        <tbody>
            <tr>
                <td colspan="2">
                    <?php
                    //[RC] PATCHED change labels etc in order to keep separate from original module
                    ?>
                    <?php if ($has_associate_facts) : ?>
                        <label>
                            <input id="show-associate-facts-pfh" type="checkbox" data-bs-toggle="collapse" data-bs-target=".wt-associate-fact-pfh" data-wt-persist="associates-pfh">
                            <?= MoreI18N::xlate('Associated events') ?>
                        </label>
                    <?php endif ?>

                    <?php
                    //[RC] PATCHED change labels etc in order to keep separate from original module
                    ?>
                    <?php if ($has_relative_facts) : ?>
                        <label>
                            <input id="show-relatives-facts-pfh" type="checkbox" data-bs-toggle="collapse" data-bs-target=".wt-relation-fact-pfh" data-wt-persist="relatives-pfh">
                            <?= MoreI18N::xlate('Events of close relatives') ?>
                        </label>
                    <?php endif ?>

                    <?php
                    //[RC] PATCHED change labels etc in order to keep separate from original module
                    ?>
                    <?php if ($has_historic_facts) : ?>
                        <label>
                            <input id="show-historical-facts-pfh" type="checkbox" data-bs-toggle="collapse" data-bs-target=".wt-historic-fact-pfh" data-wt-persist="historic-facts-pfh">
                            <?= MoreI18N::xlate('Historic events') ?>
                        </label>
                    <?php endif ?>
                    
                    <?php
                    //[RC] PATCHED
                    $outputInDescriptionbox = $module->getOutputInDescriptionbox($individual);
                    echo $outputInDescriptionbox->getMain();
                    View::push('javascript');
                    echo $outputInDescriptionbox->getScript();
                    View::endpush();
                    ?>
                </td>
            </tr>
        </tbody>
    </table>

    <?php
    //[RC] PATCHED
    $outputAfterDescriptionbox = $module->getOutputAfterDescriptionbox($individual);
    echo $outputAfterDescriptionbox->getMain();
    View::push('javascript');
    echo $outputAfterDescriptionbox->getScript();
    View::endpush();
    ?>

    <table class="table wt-facts-table">
        <tbody>
            <?php foreach ($facts as $fact) : ?>
                <?= view(VestaUtils::vestaViewsNamespace() . '::fact', ['fact' => $fact, 'record' => $individual, 'module' => $module]) ?>
            <?php endforeach ?>

            <?php if ($facts->isEmpty()) : ?>
                <tr>
                    <td colspan="2">
                        <?= MoreI18N::xlate('There are no facts for this individual.') ?>
                    </td>
                </tr>
            <?php endif ?>

            <?php if ($individual->canEdit()) : ?>
                <?= view('fact-add-new', ['record' => $individual]) ?>
            <?php endif ?>
        </tbody>
    </table>
</div>

<?php
//[RC] PATCHED
$outputAfterTab = $module->getOutputAfterTab($individual);
echo $outputAfterTab->getMain();
View::push('javascript');
echo $outputAfterTab->getScript();
View::endpush();
?>

<?php View::push('javascript') ?>
<script>
  'use strict';

<?php
    //note: webtrees registers other persistentToggles via webtrees.js itself, but we must register explicitly if loaded within ajax!
?>
<?php if ($has_associate_facts) : ?>
    webtrees.persistentToggle(document.querySelector('#show-associate-facts-pfh'));
<?php endif ?>

<?php
//[RC] PATCHED change labels etc in order to keep separate from original module
?>
<?php if ($has_relative_facts) : ?>
    webtrees.persistentToggle(document.querySelector('#show-relatives-facts-pfh'));
<?php endif ?>

<?php
//[RC] PATCHED change labels etc in order to keep separate from original module
?>
<?php if ($has_historic_facts) : ?>
    webtrees.persistentToggle(document.querySelector('#show-historical-facts-pfh'));
<?php endif ?>    
</script>

<?php  
  $requests = [];

  foreach ($facts as $fact) {
    $requests = array_merge($requests, $module->functionsVestals()->vestalsForFactPlace($fact));
  }

  $url = $module->functionsVestals()->vestalsActionUrl();
?>
    
<?php if (sizeof($requests) > 0) : ?>
  <script>
    //load via ajax
    $.ajax({
          url : "<?= $url ?>",
          type: "POST",
          data: JSON.stringify(<?= json_encode(array_values($requests)) ?>),
          contentType: "application/json; charset=utf-8",
          dataType   : "json",
          success    : function(arr) {
            for (i = 0; i < arr.length; i++) {
              $("."+arr[i].classAttr).replaceWith(arr[i].html);
            }
          }
    });
  </script>
<?php endif ?>  

<?php View::endpush() ?>
